// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://tos.santoshk.dev",
        "contact": {
            "name": "M Nurilman Baehaqi",
            "url": "https://twitter.com/MOXSPOY",
            "email": "mnurilmanbaehaqi@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app-info": {
            "get": {
                "description": "This endpoint does not require token (public)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App Config"
                ],
                "summary": "Show application info metadata as the startup info while client app is launched",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Api Key",
                        "name": "api_key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AppConfigResponse"
                        }
                    }
                }
            }
        },
        "/auth/check-credential": {
            "post": {
                "description": "Usually this endpoint used before validate user's identity",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Check whether email or phone number exist on the database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Api Key",
                        "name": "api_key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email/Phone Number",
                        "name": "credential",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessAPIResponseMessageOnly"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint used to fetch user's data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Api Key",
                        "name": "api_key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Users"
                        }
                    }
                }
            }
        },
        "/user/update-email": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Usually this endpoint used because user fill phone number first",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user's email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Api Key",
                        "name": "api_key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email that will be saved to the database",
                        "name": "new_email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessAPIResponseMessageAndCode"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AppConfigResponse": {
            "type": "object",
            "properties": {
                "customer_friend_phone_number": {
                    "type": "string"
                },
                "maintenance": {
                    "type": "string"
                },
                "minimum_version": {
                    "type": "string"
                },
                "operating_time_weekday": {
                    "type": "string"
                },
                "operating_time_weekend": {
                    "type": "string"
                }
            }
        },
        "models.SuccessAPIResponseMessageAndCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.SuccessAPIResponseMessageOnly": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Users": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Flop Web Service",
	Description:      "Web service API in Go using Gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
